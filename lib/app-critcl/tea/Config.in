## -*- tcl -*- Critcl configuration file
# # ## ### ##### ######## ############# #####################
## For
# 	@@PNAME@@ @@PMAJORV@@.@@PMINORV@@
#
# Copyright (c) @@YEAR@@ @@PORG@@
#
# Generated by @@CRITCL@@
# At           @@NOW@@

# This specific file gets filled by the TEA configure(.in) with the
# compiler information it found when run, and the accompanying
# Makefile(.in) uses it to overide critcl's default configuration
# settings. In this way we manage to get a proper TEA setup of flags
# and such, bypassing all of critcl's own selection logic. critcl is
# essentially 'just' used as a custom compiler driver, whereas a
# standard TEA Makefile would have all the relevant commands listed
# explicitly in its rules.

# # ## ### ##### ######## ############# #####################
## First, keep the GCC specific defaults.

compile         gcc -c -fPIC
version         gcc -v
link            gcc -shared
include         -I
preproc_define  gcc -E -dM
preproc_enum    gcc -E
tclstubs        -DUSE_TCL_STUBS
tkstubs         -DUSE_TK_STUBS
debug_memory    -DTCL_MEM_DEBUG
debug_symbols   -g
object          .o
output          -o [list $outfile]
ldoutput
link_debug
link_release
link_preload    --unresolved-symbols=ignore-in-shared-libs
strip           -Wl,-s
optimize        -O2
noassert        -DNDEBUG
threadflags     -DUSE_THREAD_ALLOC=1 -D_REENTRANT=1 -D_THREAD_SAFE=1    \
                -DHAVE_PTHREAD_ATTR_SETSTACKSIZE=1 -DHAVE_READDIR_R=1   \
                -DTCL_THREADS=1


# # ## ### ##### ######## ############# #####################
## Second, define settings based on the system information found by
## configure(.in), converted into something usable by critcl. See the
## section below for the raw settings.

TEA platform        @CRITCL_PLATFORM@
TEA compile         @CRITCL_CC@
TEA version         @CRITCL_VERSION@
TEA link            @CRITCL_LINK@
TEA preproc_define  @CRITCL_CPP_DEFINE@
TEA preproc_enum    @CRITCL_CPP_ENUM@
TEA debug_symbols   @CFLAGS_DEBUG@
TEA object          .@OBJEXT@
TEA output          @CRITCL_CC_OUTPUT@
TEA ldoutput        @CRITCL_LD_OUTPUT@
TEA link_debug      @CRITCL_LD_DBG@
TEA link_release    @CRITCL_LD_REL@
TEA link_preload    --unresolved-symbols=ignore-in-shared-libs
TEA strip           
TEA optimize        @CFLAGS_OPTIMIZE@


# # ## ### ##### ######## ############# #####################
## Third, the exact raw settings generated by configure(.in),
## as found in build_dir/config.status. To help debugging the
## munging, when its wrong.
##
## The lines marked with ** are those which are of especially high
## interest.

#**	CC			= (@CC@)
#**	CFLAGS			= (@CFLAGS@)
#**	CFLAGS_DEBUG		= (@CFLAGS_DEBUG@)
#**	CFLAGS_OPTIMIZE		= (@CFLAGS_OPTIMIZE@)
#**	CFLAGS_WARNING		= (@CFLAGS_WARNING@)
#**	CPP			= (@CPP@)
#**	CPPFLAGS		= (@CPPFLAGS@)
#**	DEFS			= (@DEFS@)
#**	LDFLAGS			= (@LDFLAGS@)
#**	LDFLAGS_DEFAULT		= (@LDFLAGS_DEFAULT@)
#**	LIBS			= (@LIBS@)
#**	MAKE_LIB		= (@MAKE_LIB@)
#**	MAKE_SHARED_LIB		= (@MAKE_SHARED_LIB@)
#**	MAKE_STATIC_LIB		= (@MAKE_STATIC_LIB@)
#**	MAKE_STUB_LIB		= (@MAKE_STUB_LIB@)
#**	MATH_LIBS		= (@MATH_LIBS@)
#**	OBJEXT			= (@OBJEXT@)
#**	SHLIB_CFLAGS		= (@SHLIB_CFLAGS@)
#**	SHLIB_LD		= (@SHLIB_LD@)
#**	SHLIB_LD_LIBS		= (@SHLIB_LD_LIBS@)
#**	SHLIB_SUFFIX		= (@SHLIB_SUFFIX@)
#**	STLIB_LD		= (@STLIB_LD@)
#**	TCL_EXTRA_CFLAGS	= (@TCL_EXTRA_CFLAGS@)
#**	TCL_INCLUDES		= (@TCL_INCLUDES@)
#**	TCL_LD_FLAGS		= (@TCL_LD_FLAGS@)
#**	TCL_LIBS		= (@TCL_LIBS@)
#**	TCL_SHLIB_LD_LIBS	= (@TCL_SHLIB_LD_LIBS@)
#**	TCL_THREADS		= (@TCL_THREADS@)

#	AR			= (@AR@)
#	CELIB_DIR		= (@CELIB_DIR@)
#	CFLAGS_DEFAULT		= (@CFLAGS_DEFAULT@)
#	CLEANFILES		= (@CLEANFILES@)
#	CYGPATH			= (@CYGPATH@)
#	ECHO_C			= (@ECHO_C@)
#	ECHO_N			= (@ECHO_N@)
#	ECHO_T			= (@ECHO_T@)
#	EGREP			= (@EGREP@)
#	EXEEXT			= (@EXEEXT@)
#	GREP			= (@GREP@)
#	INSTALL_DATA		= (@INSTALL_DATA@)
#	INSTALL_PROGRAM		= (@INSTALL_PROGRAM@)
#	INSTALL_SCRIPT		= (@INSTALL_SCRIPT@)
#	LD_LIBRARY_PATH_VAR	= (@LD_LIBRARY_PATH_VAR@)
#	LIBOBJS			= (@LIBOBJS@)
#	LTLIBOBJS		= (@LTLIBOBJS@)
#	PACKAGE_BUGREPORT	= (@PACKAGE_BUGREPORT@)
#	PACKAGE_NAME		= (@PACKAGE_NAME@)
#	PACKAGE_STRING		= (@PACKAGE_STRING@)
#	PACKAGE_TARNAME		= (@PACKAGE_TARNAME@)
#	PACKAGE_VERSION		= (@PACKAGE_VERSION@)
#	PATH_SEPARATOR		= (@PATH_SEPARATOR@)
#	PKG_CFLAGS		= (@PKG_CFLAGS@)
#	PKG_HEADERS		= (@PKG_HEADERS@)
#	PKG_INCLUDES		= (@PKG_INCLUDES@)
#	PKG_LIBS		= (@PKG_LIBS@)
#	PKG_LIB_FILE		= (@PKG_LIB_FILE@)
#	PKG_OBJECTS		= (@PKG_OBJECTS@)
#	PKG_SOURCES		= (@PKG_SOURCES@)
#	PKG_STUB_LIB_FILE	= (@PKG_STUB_LIB_FILE@)
#	PKG_STUB_OBJECTS	= (@PKG_STUB_OBJECTS@)
#	PKG_STUB_SOURCES	= (@PKG_STUB_SOURCES@)
#	PKG_TCL_SOURCES		= (@PKG_TCL_SOURCES@)
#	RANLIB			= (@RANLIB@)
#	RANLIB_STUB		= (@RANLIB_STUB@)
#	SET_MAKE		= (@SET_MAKE@)
#	SHARED_BUILD		= (@SHARED_BUILD@)
#	SHELL			= (@SHELL@)
#	TCLSH_PROG		= (@TCLSH_PROG@)
#	TCL_BIN_DIR		= (@TCL_BIN_DIR@)
#	TCL_DBGX		= (@TCL_DBGX@)
#	TCL_DEFS		= (@TCL_DEFS@)
#	TCL_LIB_FILE		= (@TCL_LIB_FILE@)
#	TCL_LIB_FLAG		= (@TCL_LIB_FLAG@)
#	TCL_LIB_SPEC		= (@TCL_LIB_SPEC@)
#	TCL_PATCH_LEVEL		= (@TCL_PATCH_LEVEL@)
#	TCL_SRC_DIR		= (@TCL_SRC_DIR@)
#	TCL_STUB_LIB_FILE	= (@TCL_STUB_LIB_FILE@)
#	TCL_STUB_LIB_FLAG	= (@TCL_STUB_LIB_FLAG@)
#	TCL_STUB_LIB_SPEC	= (@TCL_STUB_LIB_SPEC@)
#	TCL_VERSION		= (@TCL_VERSION@)
#	VC_MANIFEST_EMBED_DLL	= (@VC_MANIFEST_EMBED_DLL@)
#	VC_MANIFEST_EMBED_EXE	= (@VC_MANIFEST_EMBED_EXE@)

#	ac_ct_CC		= (@ac_ct_CC@)
#	bindir			= (@bindir@)
#	build_alias		= (@build_alias@)
#	datadir			= (@datadir@)
#	datarootdir		= (@datarootdir@)
#	docdir			= (@docdir@)
#	dvidir			= (@dvidir@)
#	exec_prefix		= (@exec_prefix@)
#	host_alias		= (@host_alias@)
#	htmldir			= (@htmldir@)
#	includedir		= (@includedir@)
#	infodir			= (@infodir@)
#	libdir			= (@libdir@)
#	libexecdir		= (@libexecdir@)
#	localedir		= (@localedir@)
#	localstatedir		= (@localstatedir@)
#	mandir			= (@mandir@)
#	oldincludedir		= (@oldincludedir@)
#	pdfdir			= (@pdfdir@)
#	prefix			= (@prefix@)
#	program_transform_name	= (@program_transform_name@)
#	psdir			= (@psdir@)
#	sbindir			= (@sbindir@)
#	sharedstatedir		= (@sharedstatedir@)
#	sysconfdir		= (@sysconfdir@)
#	target_alias		= (@target_alias@)

# # ## ### ##### ######## ############# #####################
